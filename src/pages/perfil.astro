---
import BaseLayout from "../layouts/baseLayout.astro";
import categories from "../data/profileCategories.json";
import Toast from "../components/toast/toast.astro";
import CardLink from "../components/forms/cardLink.astro";
import Tooltip from "../components/ui/tooltip.astro";
import CreateRepoModal from "../components/modals/createRepoModal.astro";
import ChangeRepoNameModal from "../components/modals/changeRepoNameModal.astro";
import "../styles/main.css";

let categoriesList = [];
for (const key in categories) {
  categories[key].key = key;
  categoriesList.push(categories[key]);
}
---

<BaseLayout
  title="Perfil"
  description="Destaca tus habilidades y logros en la industria de la programación con tu perfil en Cucoders. Comparte tu rurriculo, servicios, proyectos y apps con la comunidad."
>
  <div class="lg:max-w-[58rem] mx-auto w-full md:mt-12">
    <div
      id="alert"
      class="flex p-4 text-sm mb-6 text-yellow-800 border border-yellow-300 rounded-lg bg-yellow-50 dark:bg-gray-800 dark:text-yellow-400 dark:border-yellow-800"
      role="alert"
    >
      <svg
        aria-hidden="true"
        class="flex-shrink-0 inline w-5 h-5 mr-3"
        fill="currentColor"
        viewBox="0 0 20 20"
        xmlns="http://www.w3.org/2000/svg"
        ><path
          fill-rule="evenodd"
          d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z"
          clip-rule="evenodd"></path></svg
      >
      <span class="sr-only">Info</span>
      <div>Los cambios realizados en el perfil tardan 24h en ser reflejados en el sitio web de CuCoders.</div>
      <button
        type="button"
        class="ml-auto -mx-1.5 -my-1.5 bg-yellow-50 text-yellow-500 rounded-lg focus:ring-2 focus:ring-yellow-400 p-1.5 hover:bg-yellow-200 inline-flex h-8 w-8 dark:bg-gray-800 dark:text-yellow-300 dark:hover:bg-gray-700"
        data-dismiss-target="#alert"
        aria-label="Close"
      >
        <span class="sr-only">Close</span>
        <svg aria-hidden="true" class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"
          ><path
            fill-rule="evenodd"
            d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
            clip-rule="evenodd"></path></svg
        >
      </button>
    </div>
  </div>

  <div
    id="profile-form"
    class="bg-white border md:mx-auto mb-5 p-8 lg:max-w-[58rem] border-gray-200 rounded-lg dark:bg-gray-800 dark:border-gray-700 w-full"
  >
    <div class="flex justify-between">
      <h1 class="text-xl font-bold dark:text-white">Datos de Github</h1>

      <div class="flex">
        <img
          id="reloadGithubData"
          data-tooltip-target="tooltip-reload"
          src="/assets/img/icons/reload.svg"
          alt="Recargar Datos"
          class="w-7 h-7 cursor-pointer mx-3 dark:invert dark:contrast-200 dark:saturate-0"
        />
        <img
          src="/assets/img/icons/sharp-help-outline.svg"
          alt="Ayuda"
          class="w-7 h-7 cursor-pointer mx-3 dark:invert dark:contrast-200 dark:saturate-0"
          data-popover-target="popover-default"
        />
      </div>
    </div>

    <Tooltip id="tooltip-reload" text="Recargar datos" />

    <div
      data-popover
      id="popover-default"
      role="tooltip"
      class="absolute z-10 invisible inline-block w-64 text-sm font-light text-gray-500 transition-opacity duration-300 bg-white border border-gray-200 rounded-lg shadow-sm opacity-0 dark:text-gray-400 dark:border-gray-600 dark:bg-gray-800"
    >
      <div class="px-3 py-2 bg-gray-100 border-b border-gray-200 rounded-t-lg dark:border-gray-600 dark:bg-gray-700">
        <h3 class="font-semibold text-gray-900 dark:text-white">Datos de GitHub</h3>
      </div>
      <div class="px-3 py-2">
        <p>
          Estos datos se obtienen de tu perfil de GitHub,
          <a class="underline" href="https://github.com/settings/profile" target="_blank">actualízalos</a> y luego recargarlos
          aquí.
        </p>
      </div>
      <div data-popper-arrow></div>
    </div>

    <hr class="my-4" />

    <input type="hidden" id="user-id" />

    <div>
      <div class="grid gap-6 mb-6 md:grid-cols-2">
        <div>
          <label for="name" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Nombre</label>
          <input
            type="text"
            id="name"
            class="bg-gray-50 border border-gray-300 opacity-50 text-gray-900 text-sm rounded-lg focus:ring-gray-500 focus:border-gray-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500"
            disabled
          />
        </div>
        <div>
          <label for="location" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Ubicación</label>
          <input
            type="text"
            id="location"
            maxlength="25"
            class="bg-gray-50 border border-gray-300 opacity-50 text-gray-900 text-sm rounded-lg focus:ring-gray-500 focus:border-gray-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500"
            disabled
          />
        </div>

        <div>
          <label for="twitter-username" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Twitter</label>
          <div class="flex opacity-50">
            <span
              class="inline-flex items-center px-3 text-sm text-gray-900 bg-gray-200 border border-r-0 border-gray-300 rounded-l-md dark:bg-gray-600 dark:text-gray-400 dark:border-gray-600"
            >
              @
            </span>
            <input
              type="text"
              id="twitter-username"
              disabled
              class="rounded-none rounded-r-lg bg-gray-50 border text-gray-900 focus:ring-gray-500 focus:border-gray-500 block flex-1 min-w-0 w-full text-sm border-gray-300 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500"
            />
          </div>
        </div>
        <div>
          <label for="github-username" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">GitHub</label>
          <div class="flex opacity-50">
            <span
              class="inline-flex items-center px-3 text-sm text-gray-900 bg-gray-200 border border-r-0 border-gray-300 rounded-l-md dark:bg-gray-600 dark:text-gray-400 dark:border-gray-600"
            >
              @
            </span>
            <input
              type="text"
              id="github-username"
              disabled
              class="rounded-none rounded-r-lg bg-gray-50 border text-gray-900 focus:ring-gray-500 focus:border-gray-500 block flex-1 min-w-0 w-full text-sm border-gray-300 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500"
            />
          </div>
        </div>
        <div>
          <label for="company" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Compañia</label>
          <input
            type="text"
            id="company"
            class="bg-gray-50 border border-gray-300 opacity-50 text-gray-900 text-sm rounded-lg focus:ring-gray-500 focus:border-gray-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500"
            disabled
          />
        </div>
        <div>
          <label for="website" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Website URL</label>
          <input
            type="url"
            id="website"
            class="bg-gray-50 border border-gray-300 opacity-50 text-gray-900 text-sm rounded-lg focus:ring-gray-500 focus:border-gray-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500"
            disabled
          />
        </div>
        <div class="flex items-center">
          <input
            id="hireable"
            type="checkbox"
            value=""
            disabled
            class="w-4 h-4 text-gray-600 opacity-50 bg-gray-100 border-gray-300 rounded focus:ring-gray-500 dark:focus:ring-gray-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600"
          />
          <label for="default-checkbox" class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-300">Open to Work</label
          >
        </div>
      </div>
      <div class="mb-6">
        <label for="bio" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Bio</label>
        <textarea
          id="bio"
          maxlength="160"
          disabled
          rows="2"
          class="block p-2.5 w-full text-sm opacity-50 text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-gray-500 focus:border-gray-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500"
        ></textarea>
      </div>
    </div>

    <div class="flex justify-between">
      <h1 class="text-xl font-bold dark:text-white">Datos de CuCoders</h1>
    </div>

    <hr class="my-4" />

    <div class="mb-6">
      <label for="email" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Email Público</label>
      <input
        type="email"
        id="email"
        class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-gray-500 focus:border-gray-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500"
      />
    </div>

    <div class="mb-6">
      <label for="headline" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Encabezado</label>
      <input
        type="text"
        id="headline"
        maxlength="35"
        class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-gray-500 focus:border-gray-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500"
        placeholder="Software Engineer"
      />
    </div>

    <div class="mb-6">
      <label for="message" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Categorias</label>
      <select id="categories" name="state[]" multiple placeholder="Categorias" autocomplete="off">
        <option value="">Select a state...</option>
        {categoriesList.map((category) => <option value={category.key}>{category.text}</option>)}
      </select>
    </div>

    <div class="grid gap-6 mb-6 md:grid-cols-2">
      <div>
        <label for="telegram-username" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Telegram</label>
        <div class="flex">
          <span
            class="inline-flex items-center px-3 text-sm text-gray-900 bg-gray-200 border border-r-0 border-gray-300 rounded-l-md dark:bg-gray-600 dark:text-gray-400 dark:border-gray-600"
          >
            @
          </span>
          <input
            type="text"
            id="telegram-username"
            class="rounded-none rounded-r-lg bg-gray-50 border text-gray-900 focus:ring-gray-500 focus:border-gray-500 block flex-1 min-w-0 w-full text-sm border-gray-300 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500"
            placeholder="Nombre de Usuario"
          />
        </div>
      </div>
      <div>
        <label for="linkedin-username" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Linkedin</label>
        <div class="flex">
          <span
            class="inline-flex items-center px-3 text-sm text-gray-900 bg-gray-200 border border-r-0 border-gray-300 rounded-l-md dark:bg-gray-600 dark:text-gray-400 dark:border-gray-600"
          >
            @
          </span>
          <input
            type="text"
            id="linkedin-username"
            class="rounded-none rounded-r-lg bg-gray-50 border text-gray-900 focus:ring-gray-500 focus:border-gray-500 block flex-1 min-w-0 w-full text-sm border-gray-300 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500"
            placeholder="Nombre de Usuario"
          />
        </div>
      </div>
    </div>

    <div class="flex justify-center">
      <button
        id="createProfile"
        class="text-white mt-4 mx-2 bg-gray-800 hover:bg-gray-900 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-gray-600 dark:hover:bg-gray-700 dark:focus:ring-gray-800"
        >Crear Perfil</button
      >
      <div id="edit-profile-btns" class="w-full sm:w-auto hidden">
        <button
          id="copyData"
          type="button"
          class="text-gray-900 w-full sm:mx-2 sm:w-auto bg-white border border-gray-300 focus:outline-none hover:bg-gray-100 focus:ring-4 focus:ring-gray-200 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 dark:bg-gray-800 dark:text-white dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-600 dark:focus:ring-gray-700"
        >
          <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 mr-2 -ml-1 inline" viewBox="0 0 24 24"
            ><path
              fill="currentColor"
              d="M9 18q-.825 0-1.412-.587Q7 16.825 7 16V4q0-.825.588-1.413Q8.175 2 9 2h9q.825 0 1.413.587Q20 3.175 20 4v12q0 .825-.587 1.413Q18.825 18 18 18Zm0-2h9V4H9v12Zm-4 6q-.825 0-1.413-.587Q3 20.825 3 20V7q0-.425.288-.713Q3.575 6 4 6t.713.287Q5 6.575 5 7v13h10q.425 0 .713.288q.287.287.287.712t-.287.712Q15.425 22 15 22ZM9 4v12V4Z"
            ></path></svg
          >
          Copiar Datos</button
        >
        <button
          id="updateProfile"
          class="text-white mt-4 w-full sm:mx-2 sm:w-auto bg-gray-800 hover:bg-gray-900 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-gray-600 dark:hover:bg-gray-700 dark:focus:ring-gray-800"
          >Actualizar Perfil</button
        >
      </div>
    </div>
  </div>

  <div id="profile-pages" class="hidden w-full gap-6 md:grid-cols-2 lg:max-w-[58rem] mx-auto px-3 sm:px-0">
    <CardLink title="🧑‍💻 Perfil" subtitle="Resumen general de tu perfil" id="overview" target="_blank" />
    <CardLink title="💼 Servicios" subtitle="Lista los servicios que ofreces" id="services" target="_blank" />
    <CardLink title="💡 Proyectos" subtitle="Todos tus proyectos en una sola pagina" id="projects" target="_blank" />
    <CardLink title="📃 Currículo" subtitle="Resume tu experiencia, formación y aptitudes." id="resume" target="_blank" />
  </div>

  <Toast />
  <CreateRepoModal />
  <ChangeRepoNameModal />
</BaseLayout>

<link href="https://cdn.jsdelivr.net/npm/tom-select/dist/css/tom-select.css" rel="stylesheet" />
<script is:inline src="https://cdn.jsdelivr.net/npm/tom-select/dist/js/tom-select.complete.min.js"></script>

<script is:inline>
var control = new TomSelect("#categories", {});
</script>

<script>
  import { backend_url } from "../data/conf.json";
  import { showToast } from "../components/toast/toast";
  import { Modal } from "flowbite";
  import { getRemoteFileData } from "../components/helpers/getRemoteFile";
  import { isUserLogged } from "../components/helpers/user";
  import * as overviewTemplate from "../templates/overview.md";
  import * as servicesTemplate from "../templates/services.md";
  import * as projectsTemplate from "../templates/projects.md";
  import * as resumeTemplate from "../templates/resume.md";

  const proflieBtn = document.getElementById("createProfile");
  proflieBtn.addEventListener("click", createProfile, true);

  const reloadBtn = document.getElementById("reloadGithubData");
  reloadBtn.addEventListener("click", loadUserData, true);

  const copyDataBtn = document.getElementById("copyData");
  copyDataBtn.addEventListener("click", copyToClipboard, true);

  const updateBtn = document.getElementById("updateProfile");
  updateBtn.addEventListener("click", updateProfile, true);

  const continueBtn = document.getElementById("continue-btn");
  continueBtn.addEventListener("click", continueCreateRepoForm, true);

  const closeModalBtn = document.getElementById("close-modal-btn");
  closeModalBtn.addEventListener("click", closeCreateRepoForm, true);

  const continueBranchBtn = document.getElementById("continue-branch-btn");
  continueBranchBtn.addEventListener("click", continueBranchForm, true);

  const closeBranchModalBtn = document.getElementById("close-branch-modal-btn");
  closeBranchModalBtn.addEventListener("click", closeBranchForm, true);

  const $repoModalEl = document.getElementById("repoModal");
  const repoModal = new Modal($repoModalEl, { placement: "center", backdrop: "static", closable: true });

  const $branchModalEl = document.getElementById("branchModal");
  const branchModal = new Modal($branchModalEl, { placement: "center", backdrop: "static", closable: true });

  !isUserLogged() && (window.location.href = "/iniciar-sesion");
  loadUserData();

  async function loadUserData() {
    const username = localStorage.getItem("user_username");

    disableInput();
    const isMember = await isCommunityMemeber(username);
    if (!isMember) {
      const alert = `El usuario ${username} no es miembro de la Comunidad. Necesitas registrarte primero para actualizar tu perfil.`;
      showToast(alert, true);
      enableInput();
      return;
    }
    const specialRepo = await isSpecialRepoAvailable(username);
    if (!specialRepo) {
      repoModal.show();
      enableInput();
      return;
    }

    const mainBranch = await isMainBranch(username);
    if (!mainBranch) {
      const new_url = `https://github.com/${username}/${username}/branches`;
      document.getElementById("change-branch-name-btn").setAttribute("href", new_url);
      branchModal.show();
      enableInput();
      return;
    }

    loadGithubUserData(username);
    loadCucodersUserData(username);
  }

  async function isCommunityMemeber(username) {
    const url = backend_url + "api/members/is-member?username=" + username;
    try {
      const response = await fetch(url, { method: "GET" });
      const data = await response.json();
      return data.is_member;
    } catch {
      return false;
    }
  }

  async function isSpecialRepoAvailable(username) {
    const url = `https://api.github.com/repos/${username}/${username}`;
    try {
      const response = await fetch(url, { method: "GET" });
      const status = await response.status;
      if (status == 404) return false;

      return true;
    } catch {
      return false;
    }
  }

  async function isMainBranch(username) {
    const url = backend_url + "api/members/has-main-branch?username=" + username;
    try {
      const response = await fetch(url, { method: "GET" });
      const data = await response.json();
      return data.has_main_branch;
    } catch {
      return false;
    }
  }

  function loadGithubUserData(username) {
    fetch("https://api.github.com/users/" + username, {
      method: "GET",
    })
      .then((response) => response.json())
      .then((data) => {
        setFormData(data);
        enableInput();
        showForm();
        setProfilePagesLinks(username);
        showToast("Datos de usuario cargados satisfactoriamente.");
      })
      .catch((e) => {
        showToast("Ocurrió un error inesperado. Por favor vuelva a intentarlo más tarde.", true);
        enableInput();
      });
  }

  function continueCreateRepoForm() {
    repoModal.hide();
    loadUserData();
  }

  function closeCreateRepoForm() {
    repoModal.hide();
  }

  function continueBranchForm() {
    branchModal.hide();
    loadUserData();
  }

  function closeBranchForm() {
    branchModal.hide();
  }

  async function loadCucodersUserData(username) {
    const data = await getRemoteFileData(
      `https://raw.githubusercontent.com/${username}/${username}/main/cucoders_data/profile-data.json`,
      "json"
    );
    if (data) {
      cuCodersFormData(data);
      document.getElementById("edit-profile-btns").classList.remove("hidden");
      document.getElementById("createProfile").classList.add("hidden");
    }
  }

  function setFormData(data) {
    document.getElementById("name").value = data.name;
    document.getElementById("location").value = data.location;
    document.getElementById("twitter-username").value = data.twitter_username;
    document.getElementById("github-username").value = data.login;
    document.getElementById("company").value = data.company;
    document.getElementById("website").value = data.blog;
    document.getElementById("hireable").checked = data.hireable;
    document.getElementById("bio").value = data.bio;
    document.getElementById("user-id").value = data.id;
  }

  function cuCodersFormData(data) {
    document.getElementById("email").value = data.email;
    document.getElementById("headline").value = data.headline;
    document.getElementById("linkedin-username").value = data.linkedin_username;
    document.getElementById("telegram-username").value = data.telegram_username;
    // TODO: Buscar alguna manera de cargar de este lado los datos del select multiple
  }

  function showForm() {
    document.getElementById("profile-form").classList.remove("hidden");
    document.getElementById("profile-pages").classList.remove("hidden");
    document.getElementById("profile-pages").classList.add("grid");
  }

  function disableInput() {
    document.getElementById("reloadGithubData").setAttribute("disabled", "");
    document.getElementById("reloadGithubData").classList.add("animate-spin");
    document.getElementById("github-ico").classList.add("hidden");
  }

  function enableInput() {
    document.getElementById("reloadGithubData").removeAttribute("disabled");
    document.getElementById("reloadGithubData").classList.remove("animate-spin");
    document.getElementById("github-ico").classList.remove("hidden");
  }

  function createProfile() {
    const username = document.getElementById("github-username").value;
    const data = createProfileData();
    const encodedFileData = encodeURIComponent(JSON.stringify(data));
    const githubQueryLink = `https://github.com/${username}/${username}/new/main/cucoders_data?value=${encodedFileData}&filename=profile-data.json`;
    window.open(githubQueryLink);
  }

  function updateProfile() {
    const username = (document.getElementById("github-username") as HTMLInputElement).value;
    const githubQueryLink = `https://github.com/${username}/${username}/edit/main/cucoders_data/profile-data.json`;
    window.open(githubQueryLink);
  }

  function createProfileData() {
    const data = {
      username: document.getElementById("github-username").value,
      id: document.getElementById("user-id").value,
      name: document.getElementById("name").value,
      company: document.getElementById("company").value,
      web: document.getElementById("website").value,
      location: document.getElementById("location").value,
      email: document.getElementById("email").value,
      hireable: document.getElementById("hireable").checked,
      bio: document.getElementById("bio").value,
      twitter_username: document.getElementById("twitter-username").value,
      headline: document.getElementById("headline").value,
      linkedin_username: document.getElementById("linkedin-username").value,
      telegram_username: document.getElementById("telegram-username").value,
    };

    var categories = [];
    for (let option of (<HTMLSelectElement>document.getElementById("categories")).options) {
      if (option.selected) {
        categories.push(option.value);
      }
    }
    data["categories"] = categories;
    return data;
  }

  function copyToClipboard() {
    const profileData = createProfileData();
    navigator.clipboard.writeText(JSON.stringify(profileData));
    const alert =
      "Datos copiados al portapapeles satisfactoriamente! Abra su configuración en Github y remplácela con los nuevos datos.";
    showToast(alert);
  }

  function setProfilePagesLinks(username) {
    setLinkAttr(username, "overview", "overview.md", overviewTemplate.rawContent());
    setLinkAttr(username, "services", "services.md", servicesTemplate.rawContent());
    setLinkAttr(username, "projects", "projects.md", projectsTemplate.rawContent());
    setLinkAttr(username, "resume", "resume.md", resumeTemplate.rawContent());
  }

  async function setLinkAttr(username, id, file_name, newFileContent = "") {
    const encodedFileData = encodeURIComponent(newFileContent);
    let rawUrl = `https://raw.githubusercontent.com/${username}/${username}/main/cucoders_data/${file_name}`;
    let newUrl = `https://github.com/${username}/${username}/new/main/cucoders_data?value=${encodedFileData}&filename=${file_name}`;
    let editUrl = `https://github.com/${username}/${username}/edit/main/cucoders_data/${file_name}`;

    if (id == "overview") {
      rawUrl = `https://raw.githubusercontent.com/${username}/${username}/main/README.md`;
      newUrl = `https://github.com/${username}/${username}/new/main?value=${encodedFileData}&filename=README.md`;
      editUrl = `https://github.com/${username}/${username}/edit/main/README.md`;
    }

    const file = await getRemoteFileData(rawUrl, "text");
    if (file) {
      document.getElementById(id).setAttribute("href", editUrl);
    } else {
      document.getElementById(id).setAttribute("href", newUrl);
    }
  }
</script>
