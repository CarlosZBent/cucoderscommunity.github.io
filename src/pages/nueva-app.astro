---
import BaseLayout from "../layouts/baseLayout.astro";
import categories from "../data/appsCategories.json";
import Toast from "../components/toast/toast.astro";
import TextInput from "../components/forms/textInput.astro";
import UsernameInput from "../components/forms/usernameInput.astro";
import "../styles/main.css";

let categoriesList = [];
for (const key in categories) {
  categories[key].key = key;
  categoriesList.push(categories[key]);
}

let platformList = ["Windows", "Linux", "macOS", "Web", "Android", "iOS", "Navegador Web"];
---

<BaseLayout
  title="Publicar Nueva Aplicación"
  description="Cucoders es la plataforma perfecta para lanzar tu próxima aplicación. Conecta con una comunidad de desarrolladores talentosos y accede a recursos y herramientas esenciales para ayudarte a dar forma a tu idea. ¡Comienza tu proyecto hoy y conviértete en parte de la comunidad de programadores líderes en la región!"
>
  <div
    id="app-form"
    class="bg-white md:mt-12 border md:mx-auto mb-5 p-8 lg:max-w-[58rem] border-gray-200 rounded-lg dark:bg-gray-800 dark:border-gray-700 w-full"
  >
    <div class="flex justify-between">
      <h1 class="text-xl font-bold dark:text-gray-100">Nueva Aplicación</h1>
    </div>

    <hr class="my-4" />

    <input type="hidden" id="user-id" />

    <div>
      <div class="grid gap-6 mb-6 md:grid-cols-2">
        <TextInput id="name" label="Nombre *" maxlength="80" />
        <TextInput
          id="logo"
          label="Logo *. Dimensión Recomendada 256 x 256 [1:1]"
          placeholder="URL de la imagen"
          maxlength="200"
        />
      </div>
      <div class="mb-6">
        <TextInput id="description" label="Descripción Breve *" maxlength="200" />
      </div>
      <div class="grid gap-6 mb-6 md:grid-cols-2">
        <TextInput id="website" label="Sitio Web" type="url" />
        <TextInput id="email" label="Email" type="email" />
        <div class="flex items-center">
          <input
            id="is-open-source"
            type="checkbox"
            value=""
            class="w-4 h-4 text-gray-600 bg-gray-100 border-gray-300 rounded focus:ring-gray-500 dark:focus:ring-gray-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600"
          />
          <label for="is-open-source" class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-300"
            >Es de Código Abierto</label
          >
        </div>
        <TextInput id="repository_url" label="Repositorio URL" type="url" />
        <UsernameInput id="twitter_username" label="Twitter" placeholder="Nombre de Usuario" />
        <UsernameInput id="telegram_username" label="Telegram" placeholder="Nombre de Usuario" />
      </div>
    </div>

    <div class="mb-6">
      <label for="categories" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Categorias</label>
      <select id="categories" name="state[]" multiple placeholder="Categorias" autocomplete="off">
        <option value="">Select a state...</option>
        {categoriesList.map((category) => <option value={category.key}>{category.text}</option>)}
      </select>
    </div>

    <div class="mb-6">
      <label for="platforms" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Plataformas</label>
      <select id="platforms" name="state[]" multiple placeholder="Plataformas" autocomplete="off">
        <option value="">Select a state...</option>
        {platformList.map((category) => <option value={category}>{category}</option>)}
      </select>
    </div>

    <div class="flex justify-center">
      <button
        id="createApp"
        class="text-white mt-4 mx-2 bg-gray-800 hover:bg-gray-900 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-gray-600 dark:hover:bg-gray-700 dark:focus:ring-gray-800"
        >Publicar Aplicación</button
      >
    </div>
  </div>

  <Toast />
</BaseLayout>

<link href="https://cdn.jsdelivr.net/npm/tom-select/dist/css/tom-select.css" rel="stylesheet" />
<script is:inline src="https://cdn.jsdelivr.net/npm/tom-select/dist/js/tom-select.complete.min.js"></script>

<script is:inline>
var control = new TomSelect("#categories", {
  maxItems: 4,
});

var control2 = new TomSelect("#platforms", {});
</script>

<script>
  import { backend_url } from "../data/conf.json";
  import { showToast } from "../components/toast/toast";
  import { isUserLogged } from "../components/helpers/user";

  const proflieBtn = document.getElementById("createApp");
  proflieBtn.addEventListener("click", createApp, true);

  !isUserLogged() && (window.location.href = "/iniciar-sesion");

  function createApp() {
    const username = localStorage.getItem("user_username");
    const fileName = getElem("name").value.replace(/[^a-zA-Z0-9]+/g, "-") + ".md";
    const fileText = createAppData();
    const encodedFileText = encodeURIComponent(fileText);
    const githubQueryLink = `https://github.com/CuCodersCommunity/cucoderscommunity.github.io/new/main/src/content/apps/${username}?value=${encodedFileText}&filename=${fileName}`;
    window.open(githubQueryLink);
  }

  function getElem(id) {
    return document.getElementById(id);
  }

  function createAppData() {
    return `---
name: "${getElem("name").value}"
id: "${getElem("name").value.replace(/[^a-zA-Z0-9]+/g, "-")}"
description: "${getElem("description").value}"
logo: "${getElem("logo").value}"
email: "${getElem("email").value}"
website: "${getElem("website").value}"
is_open_source: ${getElem("is-open-source").checked}
repository_url: "${getElem("repository_url").value}"
twitter_username: "${getElem("twitter_username").value}"
telegram_username: "${getElem("telegram_username").value}"
dev_username: "${localStorage.getItem("user_username")}"
pubDate: "${new Date().toDateString()}"
categories: ${JSON.stringify(getSelectedElements("categories"))}
platforms: ${JSON.stringify(getSelectedElements("platforms"))}
---

Aquí va la descripción general de tu app en formato MarkDown.`;
  }

  function getSelectedElements(id) {
    var list = [];
    for (let option of (<HTMLSelectElement>document.getElementById(id)).options) {
      if (option.selected) {
        list.push(option.value);
      }
    }
    return list;
  }
</script>
