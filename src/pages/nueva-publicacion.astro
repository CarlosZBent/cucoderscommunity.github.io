---
import BaseLayout from "../layouts/baseLayout.astro";
import NewPostModal from "../components/modals/newPostModal.astro";
import categories from "../data/categories.json";
import TextInput from "../components/forms/textInput.astro";
import Toast from "../components/toast/toast.astro";
import "../styles/main.css";

let categoriesList = [];
for (const key in categories) {
  categories[key].key = key;
  categoriesList.push(categories[key]);
}
---

<BaseLayout
  title="Crear Nueva Publicación"
  description="Únete a la comunidad de expertos de Cucoders y comparte tus conocimientos a través de artículos informativos. Ayuda a otros desarrolladores a crecer y aprender, y fortalece tu reputación como líder en la industria. ¡Crea tu publicación hoy y hazte escuchar en Cucoders!"
>
  <div
    id="post-form"
    class="bg-white border md:mt-12 md:mx-auto mb-5 p-8 lg:max-w-[58rem] border-gray-200 rounded-lg dark:bg-gray-800 dark:border-gray-700 w-full"
  >
    <div class="flex justify-between">
      <h1 class="text-3xl font-bold dark:text-gray-100">Nueva Publicación</h1>

      <img
        src="/assets/img/icons/sharp-help-outline.svg"
        alt="Ayuda"
        class="w-8 h-8 cursor-pointer mx-3 dark:invert dark:contrast-200 dark:saturate-0"
        data-modal-target="newPostModal"
        data-modal-toggle="newPostModal"
      />
    </div>

    <hr class="my-4" />

    <div>
      <div class="mb-4">
        <label for="title" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Titulo*</label>
        <input
          type="text"
          id="title"
          maxlength="120"
          autocomplete="off"
          placeholder="Titulo de de la publicación."
          class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-gray-500 focus:border-gray-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500"
        />
      </div>

      <div class="mb-4">
        <label for="description" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Descripción</label>
        <textarea
          id="description"
          maxlength="250"
          rows="2"
          class="block p-2.5 w-full text-sm bg-gray-50 text-gray-900 rounded-lg border border-gray-300 focus:ring-gray-500 focus:border-gray-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500"
          placeholder="Breve descripción de la publicación."></textarea>
      </div>

      <div class="mb-4">
        <label for="thumbnail-url" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
          >Miniatura. Dimensión Recomendada 1280 x 720 [16:9]</label
        >
        <input
          id="thumbnail-url"
          type="text"
          autocomplete="off"
          placeholder="URL de la miniatura de la publicación. (Puede subirla luego desde su dispositivo en GitHub)"
          class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-gray-500 focus:border-gray-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500"
        />
      </div>

      <div class="mb-4">
        <label for="message" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Categorías*</label>
        <select
          id="categories"
          name="state[]"
          multiple
          placeholder="Categorías de la publicación (Max 3)"
          autocomplete="off"
        >
          <option value="">Select a state...</option>
          {categoriesList.map((category) => <option value={category.key}>{category.text}</option>)}
        </select>
      </div>

      <TextInput id="canonicalUrl" label="¿Estás republicando?" placeholder="URL del artículo original" />
    </div>

    <div class="flex justify-center mt-6">
      <button
        id="submitBtn"
        class="text-white bg-gray-800 hover:bg-gray-900 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-gray-600 dark:hover:bg-gray-700 dark:focus:ring-gray-800"
        >Redactar Publicación</button
      >
    </div>
  </div>

  <Toast />
</BaseLayout>

<NewPostModal />

<link href="https://cdn.jsdelivr.net/npm/tom-select/dist/css/tom-select.css" rel="stylesheet" />
<script is:inline src="https://cdn.jsdelivr.net/npm/tom-select/dist/js/tom-select.complete.min.js"></script>

<script is:inline>
new TomSelect("#categories", {
  maxItems: 3,
});
</script>

<script>
  import { backend_url } from "../data/conf.json";
  import { showToast } from "../components/toast/toast";
  import { isUserLogged } from "../components/helpers/user";

  const submitBtn = document.getElementById("submitBtn");
  submitBtn.addEventListener("click", validateSubmission, true);

  !isUserLogged() && (window.location.href = "/iniciar-sesion");

  function getValue(name) {
    return document.getElementById(name).value;
  }

  function validateSubmission() {
    const title = getValue("title");
    const image = getValue("thumbnail-url");
    const username = localStorage.getItem("user_username");
    const pubDate = new Date().toDateString();
    const description = getValue("description");
    const canonicalUrl = getValue("canonicalUrl");
    const filename = title.replace(/[^a-zA-Z0-9]+/g, "-") + ".md";

    var categories = [];
    for (let option of document.getElementById("categories").options) {
      if (option.selected) {
        categories.push(option.value);
      }
    }

    let fileText = `---
title: "${title}"
pubDate: "${pubDate}"
image: "${image}"
username: "${username}"
categories: ${JSON.stringify(categories)}
description: "${description}"
canonicalUrl: "${canonicalUrl}"
---

Aqui va el cuerpo de tu documento.`;

    const encodedFileText = encodeURIComponent(fileText);
    const githubQueryLink = `https://github.com/CuCodersCommunity/cucoderscommunity.github.io/new/main/src/content/blog/${username}?value=${encodedFileText}&filename=${filename}`;
    window.open(githubQueryLink);
  }
</script>
